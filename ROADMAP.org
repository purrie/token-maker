#+title: Roadmap

This document contains ideas and goals for the project as well as description of progress for each. Entries closer to the top can be considered of higher priority for current development.

* Modifiers
Bonus points if modifiers could be applied only to specified part of the image

** Alpha paint
Modifier for adjusting alpha on the image

** Color paint
Basic color adjust modifier to paint simple things so you don't have to go through a painting program if you just want to recolor someone's eyes and similar minor adjustments

** IDEA Image compositing
Would it be useful to have an ability to combine multiple images from other workspaces into one token/card/portrait? This could be reaching outside the scope of the program tho.

** Filters
Stuff for blurs, glows, color shifts and so on.

** Transforms
Ability to scale, rotate or move image through a modifier

** Decorations
Additional icons and other stuff that user can throw into the image, adding simple decorations.

** Text
There should be ability to add text to the token or card. This crate seems like could be helpful here: https://crates.io/crates/text-to-png/0.2.0

** Outline
This one would be useful for standees

** Unalpha
Some nice looking tokens support parts of the image going outside of the token frame, overriding its alpha. Would be nice to have that functionality. I imagine it as giving the user a paint brush which he would paint the picture with. Any part painted over of the picture would go over the frame and would not be masked out by the frame.

The issue with this one is cyclic dependency. Or ability to lock pixels so next modifiers don't override them.

This could be implemented as a mask for modifiers since more than just a frame could benefit from being able to limit its effects to specific parts of the image. Counterargument here is that this is a specialized case where painting would conform to visible parts of the image rather than to the brush. ( I think this one is my favorite since a lot of modifiers would benefit from ability to specify which parts of the image they affect and how much. )

This could be implemented if the ImageOperations would take both working image and source image for the operation so the modifier could copy parts of the image from the source even when being placed as the last modifier

This could be implemented if there was a way for modifiers to store data that would be accessible to other modifiers down the line. There could be a hook modifier which would provide data for later modifiers. Something similar as what exists in Substance Painter

* TODO Art
** Themes
- Primitive
- Roman
- Medieval
- Fantasy
- Monstrous
- Pre-modern
- Modern
- Cyberpunk
- Sci-Fi

** TODO Frame Art
- Square frames
- Pentagonal frames
- Hexagonal frames
- Turned hexagonal frames

** Card Art
Going to wait for text modifier with this one probably

** Border frames
For portraits. In portrait and landscape aspects.

** Decorations
Various minor icons that can be added onto the image

* TODO Workspace Templates
Just a way to quickly add and set up the workspace with basic defaults for specific purpose
** DONE Token
  Image within round/square/hexagonal frame
** DONE Portrait
  Image with or without border frame
** Card
  Image with big frame and space for text
** Standee
  Image with alpha masked background and outline in customizable color

* UI/UX
- [ ] Add feedback to program components in status line

* Bugs
- [ ] Using image from drive in background modifier seems bugged

* File browser

* Icons
Button text should be replaced with icons when it makes sense. Which would primarily mean header buttons.

* TODO Image Source
** DONE URL source
User should be able to use url to obtain the image

** TODO Paste source
copy pasting image into the program

** Drag and drop support

* IDEA Screen capture
Would be cool to have built in screen capture tool.

* IDEA Animations
Support for creating animated tokens

Could be done by animating values of filters, or having a collection of filters for each key frame

* IDEA Project Saving
Once I implement animations, it will probably be a good idea to also implement a way of saving the project so the work is not lost if someone wants to tweak the animation.

